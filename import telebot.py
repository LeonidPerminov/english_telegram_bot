import telebot
import psycopg2
import random
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7039489599:AAG7xh2vM2JE3L-m5lGB8qorUTTv8lSwkh8"
bot = telebot.TeleBot(TOKEN)

DB_NAME = "english_bot"
DB_USER = "postgres"
DB_PASSWORD = "1234"
DB_HOST = "localhost"

conn = psycopg2.connect(dbname=DB_NAME, user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
cursor = conn.cursor()

user_answers = {}  # –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤


# === –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===
def register_user(message):
    telegram_id = message.from_user.id
    username = message.from_user.username
    print(f"[register_user] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id} ({username})")

    cursor.execute("SELECT id FROM users WHERE telegram_id = %s", (telegram_id,))
    result = cursor.fetchone()
    if result is None:
        print("[register_user] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î. –î–æ–±–∞–≤–ª—è–µ–º.")
        cursor.execute("INSERT INTO users (telegram_id, username) VALUES (%s, %s)", (telegram_id, username))
        conn.commit()
    else:
        print(f"[register_user] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å id = {result[0]}")


def get_user_db_id(telegram_id):
    cursor.execute("SELECT id FROM users WHERE telegram_id = %s", (telegram_id,))
    result = cursor.fetchone()
    print(f"[get_user_db_id] –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞: {result}")
    return result[0] if result else None


@bot.message_handler(commands=['start'])
def start_handler(message):
    print("[start_handler] –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã /start")
    register_user(message)
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞.\n–ù–∞–ø–∏—à–∏ /play —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.")


@bot.message_handler(commands=['play'])
def play_game(message):
    print("[play_game] –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã /play")
    user_id = message.from_user.id
    db_user_id = get_user_db_id(user_id)
    print(f"[play_game] db_user_id = {db_user_id}")

    if db_user_id is None:
        bot.send_message(user_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–∞—á–∞–ª–∞ –∫–æ–º–∞–Ω–¥—É /start.")
        return

    cursor.execute("SELECT word_ru, word_en FROM words")
    common_words = cursor.fetchall()
    print(f"[play_game] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–±—â–∏—Ö —Å–ª–æ–≤: {len(common_words)}")

    cursor.execute("SELECT word_ru, word_en FROM user_words WHERE user_id = %s", (db_user_id,))
    personal_words = cursor.fetchall()
    print(f"[play_game] –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤: {len(personal_words)}")

    all_words = common_words + personal_words

    if len(all_words) < 4:
        bot.send_message(user_id, "‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã. –î–æ–±–∞–≤—å —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ /add_word")
        return

    correct = random.choice(all_words)
    word_ru = correct[0]
    correct_en = correct[1]

    wrong_options = random.sample([w[1] for w in all_words if w[1] != correct_en], 3)
    options = wrong_options + [correct_en]
    random.shuffle(options)

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for opt in options:
        markup.add(KeyboardButton(opt))

    user_answers[user_id] = (correct_en, word_ru)
    bot.send_message(user_id, f"üß† –í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\nüîπ {word_ru}", reply_markup=markup)
@bot.message_handler(commands=['add_word'])
def add_word_step1(message):
    msg = bot.send_message(message.chat.id, "üìù –í–≤–µ–¥–∏ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º:")
    bot.register_next_step_handler(msg, add_word_step2)

def add_word_step2(message):
    word_ru = message.text.strip()
    msg = bot.send_message(message.chat.id, "‚úèÔ∏è –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º:")
    bot.register_next_step_handler(msg, add_word_save, word_ru)

def add_word_save(message, word_ru):
    word_en = message.text.strip()
    db_user_id = get_user_db_id(message.from_user.id)

    cursor.execute("INSERT INTO user_words (user_id, word_ru, word_en) VALUES (%s, %s, %s)", (db_user_id, word_ru, word_en))
    conn.commit()

    cursor.execute("SELECT COUNT(*) FROM user_words WHERE user_id = %s", (db_user_id,))
    count = cursor.fetchone()[0]

    bot.send_message(message.chat.id, f"‚úÖ –°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\nüìö –¢–µ–ø–µ—Ä—å —Ç—ã –∏–∑—É—á–∞–µ—à—å {count} –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤.")
@bot.message_handler(commands=['delete_word'])
def delete_word_handler(message):
    db_user_id = get_user_db_id(message.from_user.id)
    cursor.execute("SELECT word_ru FROM user_words WHERE user_id = %s", (db_user_id,))
    words = cursor.fetchall()

    if not words:
        bot.send_message(message.chat.id, "‚ùó –£ —Ç–µ–±—è –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        return

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for w in words:
        markup.add(KeyboardButton(w[0]))

    msg = bot.send_message(message.chat.id, "üóëÔ∏è –í—ã–±–µ—Ä–∏ —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=markup)
    bot.register_next_step_handler(msg, delete_word_confirm)

def delete_word_confirm(message):
    word_ru = message.text.strip()
    db_user_id = get_user_db_id(message.from_user.id)

    cursor.execute("DELETE FROM user_words WHERE user_id = %s AND word_ru = %s", (db_user_id, word_ru))
    conn.commit()

    bot.send_message(message.chat.id, f"üóëÔ∏è –°–ª–æ–≤–æ '{word_ru}' —É–¥–∞–ª–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())

# === –ó–ê–ü–£–°–ö ===
if __name__ == '__main__':
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True)